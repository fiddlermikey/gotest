name: My Release Replacer Workflow

on:
  pull_request:
    types:
      - opened
      - synchronize
      - closed
  push:
    # branches:
    #  - 'release-[0-9]*.[0-9]*'

jobs:
  get-versions:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Display base.ref from Pull Request
        if: github.event_name == 'pull_request'
        id: display-from-pr
        run: |
          echo "Event: ${{ github.event_name }}" | tee -a $GITHUB_STEP_SUMMARY
          echo "Event Action: ${{ github.event.action }}" | tee -a $GITHUB_STEP_SUMMARY
          echo "PR_BASE_REF=${{ github.event.pull_request.base.ref }}" | tee -a "$GITHUB_ENV" | tee -a $GITHUB_STEP_SUMMARY
          echo "PR_STATE=${{ github.event.pull_request.state }}" | tee -a "$GITHUB_ENV" | tee -a $GITHUB_STEP_SUMMARY
          echo "PR_MERGED=${{ github.event.pull_request.merged }}" | tee -a "$GITHUB_ENV" | tee -a $GITHUB_STEP_SUMMARY
          echo "PR_COMMIT_SHA=${{ github.event.pull_request.merge_commit_sha }}" | tee -a "$GITHUB_ENV" | tee -a $GITHUB_STEP_SUMMARY
          echo "GITHUB_SHA=${{ github.sha }}" | tee -a "$GITHUB_ENV" | tee -a $GITHUB_STEP_SUMMARY
          baseref="${{ github.event.pull_request.base.ref }}"
          basetag="${baseref#release-}"
          echo "PR_BASE_TAG=$basetag" | tee -a "$GITHUB_ENV" | tee -a $GITHUB_STEP_SUMMARY

      - name: Display base_ref from Push Event
        if: github.event_name == 'push'
        id: display-from-push
        run: |
          echo "Branch Ref: ${{ github.ref }}" | tee -a $GITHUB_STEP_SUMMARY
          echo "Event: ${{ github.event_name }}" | tee -a $GITHUB_STEP_SUMMARY
          echo "github.sha: ${{ github.sha }}" | tee -a $GITHUB_STEP_SUMMARY

      - name: Display PR_BASE_REF
        if: github.event_name == 'pull_request'
        id: display-pr-base-ref
        run: |
          echo "PR_BASE_REF=${{ env.PR_BASE_REF }}"
          echo "PR_STATE=${{ env.PR_STATE }}"
          echo "PR_MERGED=${{ env.PR_MERGED }}"
          echo "PR_COMMIT_SHA=${{ env.PR_COMMIT_SHA }}"
          echo "GITHUB_SHA=${{ env.GITHUB_SHA }}"
          echo "PR_BASE_TAG=${{ env.PR_BASE_TAG }}"
          
  build-selector:
    needs: get-versions
    runs-on: ubuntu-latest

    steps:
      - name: Just Run Build on Push
        if: github.event_name == 'push'
        id: push-build
        run: |
          echo "Just run a build on sha ${{ github.sha }} with no delivery/release artifacts"

# Before calling this a release or prerelease build DO WE still need to check the state of pulls that match the ${{ env.PR_BASE_REF }}?
# We need to find the latest tag that matches the ${{ env.PR_BASE_REF }}
# To do this, we need to strip the 'release-' from the ref and find the latest repo.tag
# Finding base tag name above as ${{ env.PR_BASE_TAG }}

      - name: Create Prerelease Candidate Build
        if: github.event_name == 'pull_request' && env.PR_STATE == 'open'
        id: prerelease-build
        run: |
          echo "Just run a prerelease build on sha ${{ github.sha }} with delivery/release artifacts to .rc"
          
      - name: Create Release Build
        if: github.event_name == 'pull_request' && env.PR_STATE == 'closed' && env.PR_MERGED == 'true' && env.PR_COMMIT_SHA == env.GITHUB_SHA
        id: full-release-build
        run: |
          echo "Run a Full Release build on sha ${{ github.sha }} with delivery/release artifacts to final build num"

  release-type:
    needs: build-selector
    runs-on: ubuntu-latest
    steps:
      - name: Create new release
        id: create_release
#        uses: keyfactor/action-create-release@upd-deprecated
        uses: fiddlermikey/action-create-release@pre
        env:
          MANUAL_VERSION: ${{ env.MANUAL_VERSION }}
        # if: env.IS_PRE_RELEASE == 'True' || env.IS_RELEASE == 'true'
        if: github.event_name == 'pull_request'
        with:
          repo-token: ${{ secrets.SDK_SYNC_PAT }}
          release_name: v${{ env.PR_BASE_TAG }}
          body: |
            [Changelog](/./CHANGELOG.md) 
            [Readme](/./README.md) 
            For the latest README.md updates visit the [Main Page](/../main) for this repository
          draft: false
          prerelease: ${{ env.IS_PRE_RELEASE == 'True' }}
          prerelease_suffix: rc
          tag_name: ${{ env.PR_BASE_TAG }}
          auto_increment_type: ${{ (env.IS_PRE_RELEASE == 'True') && 'prerelease' || 'patch' }}
          tag_schema: semantic
          
