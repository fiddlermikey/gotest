# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    tags:
      - 'v*'


# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

jobs:
  bump-and-tag:
    runs-on: ubuntu-latest
    name: Bump version and create tag
    steps:
      - name: Bump version and push tag
        id: tag_version
        env: 
          PRE: true
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.SDK_SYNC_PAT }}
          dry_run: true
      - name: Show Bump and Tag Vars
        run: |
          echo "new_version : ${{ steps.tag_version.outputs.new_version  }}"
          env
  show-vars:
    runs-on: ubuntu-latest
    steps:
      - name: Show Vars
        run: |
          env
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      #    cache: true
      #- name: Import GPG key
      #  uses: crazy-max/ghaction-import-gpg@v5
      #  id: import_gpg
      #  with:
      #    gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
      #    passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PAT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRE: true
          #GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          #GPG_TTY: $(tty)